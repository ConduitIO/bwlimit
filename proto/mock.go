// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/conduitio/conn-rate-limit/proto (interfaces: TestServiceServer)

// Package proto is a generated GoMock package.
package proto

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockTestServiceServer is a mock of TestServiceServer interface.
type MockTestServiceServer struct {
	ctrl     *gomock.Controller
	recorder *MockTestServiceServerMockRecorder
}

// MockTestServiceServerMockRecorder is the mock recorder for MockTestServiceServer.
type MockTestServiceServerMockRecorder struct {
	mock *MockTestServiceServer
}

// NewMockTestServiceServer creates a new mock instance.
func NewMockTestServiceServer(ctrl *gomock.Controller) *MockTestServiceServer {
	mock := &MockTestServiceServer{ctrl: ctrl}
	mock.recorder = &MockTestServiceServerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTestServiceServer) EXPECT() *MockTestServiceServerMockRecorder {
	return m.recorder
}

// TestRPC mocks base method.
func (m *MockTestServiceServer) TestRPC(arg0 context.Context, arg1 *TestRequest) (*TestResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "TestRPC", arg0, arg1)
	ret0, _ := ret[0].(*TestResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// TestRPC indicates an expected call of TestRPC.
func (mr *MockTestServiceServerMockRecorder) TestRPC(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "TestRPC", reflect.TypeOf((*MockTestServiceServer)(nil).TestRPC), arg0, arg1)
}

// mustEmbedUnimplementedTestServiceServer mocks base method.
func (m *MockTestServiceServer) mustEmbedUnimplementedTestServiceServer() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "mustEmbedUnimplementedTestServiceServer")
}

// mustEmbedUnimplementedTestServiceServer indicates an expected call of mustEmbedUnimplementedTestServiceServer.
func (mr *MockTestServiceServerMockRecorder) mustEmbedUnimplementedTestServiceServer() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "mustEmbedUnimplementedTestServiceServer", reflect.TypeOf((*MockTestServiceServer)(nil).mustEmbedUnimplementedTestServiceServer))
}
